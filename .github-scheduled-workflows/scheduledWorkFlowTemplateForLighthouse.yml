# name: Scheduled workflow for lighthouse CI
# on:  
#   schedule:  
#     - cron:  '*/20 * * * *'
# jobs:  
#   scheduledJobForLightHouseCI:  
#     runs-on: ubuntu-latest    
#     steps:       
#       - uses: actions/checkout@v3  
#         with: 
#           ## This env variable contains SHA of the 
#           ## commit which triggered our main workflow.
#           ref: ${{ env.DELAYED_JOB_CHECKOUT_REF }}
        
#       - name: Check the staging version
#         run: |
#           response=$(curl -X GET "https://lite-stage-de.flaconi.de/api/version" | jq -r '.version')
#           echo stagingVersion="$response" >> $GITHUB_ENV
#           echo "stagingVersion is $stagingVersion"

#       ## When staging version is different then mark it as deployment completed
#       - name: lighthouse CI
#         id: stagingDeploymentStatus
#         if: ${{ env.DELAYED_JOB_PAYLOAD != env.stagingVersion }}
#         run: echo "deploymentCompleted=true" >> $GITHUB_ENV
        
#       - name: Use Node.js 14.x
#         if: ${{ env.deploymentCompleted == 'true' }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: 14.x
#           cache: 'yarn'

#       - name: install puppeteer
#         if: ${{ env.deploymentCompleted == 'true' }}
#         run: yarn add puppeteer --dev --immutable
      
#       - name: run Lighthouse CI
#         if: ${{ env.deploymentCompleted == 'true' }}
#         run: |
#           yarn global add @lhci/cli@0.8.x
#           lhci autorun || echo "LHCI failed!"
#         env:
#           LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
#           LHCI_WIZARD_BUILD_TOKEN: ${{ secrets.LHCI_WIZARD_BUILD_TOKEN }}
#           LHCI_STAGING_ENVIRONMENT_USERNAME: ${{ secrets.LHCI_STAGING_ENVIRONMENT_USERNAME }}
#           LHCI_STAGING_ENVIRONMENT_PASSWORD: ${{ secrets.LHCI_STAGING_ENVIRONMENT_PASSWORD }}
      
#       - name: Save the result
#         uses: actions/upload-artifact@v1
#         with:
#           name: lighthouse-result
#           path: '.lighthouseci'

#       ## Remove the workflow file from `.github/workflows` 
#       ## if work step has succeeded or attempts number 
#       ## has reached the limit equal to 3
#       - name: Remove scheduled job
#         if: |
#           steps.stagingDeploymentStatus.outcome == 'success' || 
#           github.run_number > 3
#         uses: cardinalby/unschedule-job-action@v1  
#         with:  
#           ghToken: ${{ secrets.PERSONAL_TOKEN }}
