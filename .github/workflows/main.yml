# This is a basic workflow to help you get started with Actions

name: job schudler

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world from main scheduler file!
        
      - name: Get the staging version when the new deployment got started
        run: |
          out=$(curl -X GET "https://lite-stage-de.flaconi.de/api/version" | jq -r '.version')
          echo deployedVersion="$out" >> $GITHUB_ENV
          echo deployed is $deployedVersion
      
      # Schedule the workflow to initiate lighthouse ci once the staging deployment gets completed
      - name: schedule-job-action
        uses: cardinalby/schedule-job-action@1.0.1  
        with:  
          ghToken: ${{ secrets.PERSONAL_TOKEN }}  
          templateYmlFile: '.github-scheduled-workflows/example.yml'
          jobPayload: $deployedVersion
          

