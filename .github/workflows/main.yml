# This is a basic workflow to help you get started with Actions

name: Testing if statement

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contain a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Test if expression
      - name: test-if-expression
        if: ${{ 'yes' == 'yes' }}
        run: echo This expression is true
        
      - name: get the staging version
        run: |
          response=$(curl -X GET "https://lite-stage-de.flaconi.de/api/version" | jq -r '.version')
          echo initialStagingVersion="$response" >> $GITHUB_ENV
          echo "initialStagingVersion is $initialStagingVersion"
          
      - name: test if version is same
        id: compareVersion
        if: ${{ env.initialStagingVersion == '2022.07.13.07.14' }}
        run: |
          echo "stagingVersion is same $initialStagingVersion"
          echo "::set-output name=test::hello"
          echo "deploymentCompleted=true" >> $GITHUB_ENV
        
      - name: test if version is not same
        if: ${{ env.initialStagingVersion != '2022.07.13.07.14' }}
        run: echo "stagingVersion is not same $initialStagingVersion"
        
      - name: deployment completed
        if: ${{ env.deploymentCompleted == 'true' }}
        run: echo "deploymentCompleted $deploymentCompleted"
        
      - name: deployment not completed
        if: ${{ env.deploymentCompleted != 'true' }}
        run: echo "not deploymentCompleted $deploymentCompleted"

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
    # Outputs
    outputs:
      output1: ${{ steps.compareVersion.outputs.test }}
  
  conditionalJob:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.output1 == 'hellos' }}
    steps:
      - name: get the result from previous job
        run: echo ${{needs.build.outputs.output1}}
  
