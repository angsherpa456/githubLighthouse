# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - name: Check the staging version
        run: |
          initial=$(curl -X GET "https://lite-stage-de.flaconi.de/api/version" | jq -r '.version')
          echo initialStagingVersion="$initial" >> $GITHUB_ENV
          echo "stagingVersion is $initial"
      
      - name: Timeout testing
        id: retry
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 20
          max_attempts: 3
          retry_on: error
          continue_on_error: true
          
          command: |
            echo This is times
            
            response=$(curl -X GET "https://lite-stage-de.flaconi.de/api/version" | jq -r '.version')
            echo stagingVersion="$response"
            echo "stagingVersion is $response"
            
            if [[ "${response}" == "${initialStagingVersion}" ]]; then
              echo "deploymentCompleted=true" >> $GITHUB_ENV
              echo yes in
              # echo exit 1
              # exit 1
              else 
                echo This is else;
                exit 1;
            fi
        
      - name: Run a one-line script
        run: echo "deploymentCompleted is $deploymentCompleted"
        
      - name: install puppeteer
        if: ${{ env.deploymentCompleted == 'true' }}
        run: yarn add puppeteer --dev --immutable
        
      - name: run Lighthouse CI
        if: ${{ env.deploymentCompleted == 'true' }}
        run: |
          yarn global add @lhci/cli@0.8.x
          lhci autorun || echo "LHCI failed!"
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          LHCI_STAGING_ENVIRONMENT_USERNAME: ${{ secrets.LHCI_STAGING_ENVIRONMENT_USERNAME }}
          LHCI_STAGING_ENVIRONMENT_PASSWORD: ${{ secrets.LHCI_STAGING_ENVIRONMENT_PASSWORD }}
          
            
            
